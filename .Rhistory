model1 <- bsts(initial.claims$iclaimsNSA,
state.specification = ss,
niter = 1000)
library(magrittr)
model1
model1 %>% View
model1$prior
model1$sigma.obs
model1$sigma.obs %>% plot
model1$sigma.trend.level %>% plot
model1$sigma.seasonal.52 %>% plot
model1$ %>% plot
model1$original.series %>% View
model1$original.series %>% plot
setwd("/Users/jonemery/Google Drive/LSHTM - Research Fellow/03 R/Working directory")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
### Data preparation ###
### Symptomatics
# Number of symptomatic cases by onset date for passengers (cabin contacts), passengers (other) and crew
# extracted from figure 1 in https://www.mdpi.com/2077-0383/9/3/657
data_symp = read.csv(file = "data/raw_data_symp_nishiura_20.csv", header = TRUE, sep = ",")    # raw data
data_symp$all = rowSums(data_symp[,c(-1)])                                                # aggregation into total cases
data_symp$day_no = seq(1,length(data_symp$onset_date),1)                                  # add in day numbers (day 1 = Jan 20th)
data_cases_symp = data_symp[,c("onset_date","day_no","all")]     # Incident symptomatic cases by onset date for model fitting
write.csv(data_cases_symp, file = "data/data_cases_symp.csv", row.names = FALSE)
### Non-symptomatics
# Total number of tests, positive tests, symptomatic cases and non-symptomatic cases by date of PCR test
# extracted from Table 1 in https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2020.25.10.2000180
data_non_symp = read.csv(file = "data/raw_data_non_symp_mizumoto_20.csv", header = TRUE, sep = ",") # raw data
data_non_symp$tests_non_symp = data_non_symp$tests - data_non_symp$symp                        # number of tests performed on everyone except symptomatics
data_non_symp$day_no = seq(1,length(data_symp$onset_date),1)                                   # add in day numbers (day 1 = Jan 20th)
data_non_symp$tests_non_symp_cum = cumsum(data_non_symp$tests_non_symp)                        # cumulatiec number of tests performed on everyone except symptomatics
data_tests = data_non_symp[,c("test_date","day_no","tests_non_symp_cum")]    # Cumulative PCR tests as input for PCR screening function in the model
write.csv(data_tests, file = "data_tests.csv", row.names = FALSE)
data_cases_non_symp = data_non_symp[,c("test_date","day_no","non_symp")]     # Incident non-symptomatic cases by date of PCR test for model fitting
write.csv(data_cases_non_symp, file = "data/data_cases_non_symp.csv", row.names = FALSE)
### Plots ###
height = 16
aspect_ratio = 1.4
title_size = 18
title_face = "bold"
axis_title_size = 16
x_axis_text_size = 10
y_axis_text_size = 13
axis_line_thickness = 1.1
### Symptomatics ###
ggplot() +
geom_bar(data = data_symp, stat="identity", aes(x = day_no, y = all), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_symp$onset_date, breaks = data_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,34,2), limits = c(0,34), expand = c(0,0)) +
labs(title = "Symptomatic cases with reported onset date (n=199) ",
x = "Date of symptom onset",
y = "Number of cases") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_symp_nishiura_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
### Non-symptomatics ###
ggplot() +
geom_bar(data = data_non_symp, stat="identity", aes(x = day_no, y = non_symp), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_non_symp$test_date, breaks = data_non_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,70,5), limits = c(0,70), expand = c(0,0)) +
labs(title = "Non-symptomatic cases by test date (n=320)",
x = "Date of test",
y = "Number of cases") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_non_symp_mizumoto_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
### Testing (excluding on symptomatics) ###
ggplot() +
geom_bar(data = data_non_symp, stat="identity", aes(x = day_no, y = tests_non_symp_cum), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_non_symp$test_date, breaks = data_non_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,3000,250), limits = c(0,3000), expand = c(0,0)) +
labs(title = "Cumulative tests (excluding symptomatics) by test date",
x = "Date of test",
y = "Cumulative number of tests") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_tests_mizumoto_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
#setwd("/Users/jonemery/Google Drive/LSHTM - Research Fellow/03 R/Working directory")
library("ggplot2")
### Data preparation ###
### Symptomatics
# Number of symptomatic cases by onset date for passengers (cabin contacts), passengers (other) and crew
# extracted from figure 1 in https://www.mdpi.com/2077-0383/9/3/657
data_symp = read.csv(file = "data/raw_data_symp_nishiura_20.csv", header = TRUE, sep = ",")    # raw data
data_symp$all = rowSums(data_symp[,c(-1)])                                                # aggregation into total cases
data_symp$day_no = seq(1,length(data_symp$onset_date),1)                                  # add in day numbers (day 1 = Jan 20th)
data_cases_symp = data_symp[,c("onset_date","day_no","all")]     # Incident symptomatic cases by onset date for model fitting
write.csv(data_cases_symp, file = "data/data_cases_symp.csv", row.names = FALSE)
### Non-symptomatics
# Total number of tests, positive tests, symptomatic cases and non-symptomatic cases by date of PCR test
# extracted from Table 1 in https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2020.25.10.2000180
data_non_symp = read.csv(file = "data/raw_data_non_symp_mizumoto_20.csv", header = TRUE, sep = ",") # raw data
data_non_symp$tests_non_symp = data_non_symp$tests - data_non_symp$symp                        # number of tests performed on everyone except symptomatics
data_non_symp$day_no = seq(1,length(data_symp$onset_date),1)                                   # add in day numbers (day 1 = Jan 20th)
data_non_symp$tests_non_symp_cum = cumsum(data_non_symp$tests_non_symp)                        # cumulatiec number of tests performed on everyone except symptomatics
data_tests = data_non_symp[,c("test_date","day_no","tests_non_symp_cum")]    # Cumulative PCR tests as input for PCR screening function in the model
write.csv(data_tests, file = "data_tests.csv", row.names = FALSE)
data_cases_non_symp = data_non_symp[,c("test_date","day_no","non_symp")]     # Incident non-symptomatic cases by date of PCR test for model fitting
write.csv(data_cases_non_symp, file = "data/data_cases_non_symp.csv", row.names = FALSE)
### Plots ###
height = 16
aspect_ratio = 1.4
title_size = 18
title_face = "bold"
axis_title_size = 16
x_axis_text_size = 10
y_axis_text_size = 13
axis_line_thickness = 1.1
### Symptomatics ###
ggplot() +
geom_bar(data = data_symp, stat="identity", aes(x = day_no, y = all), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_symp$onset_date, breaks = data_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,34,2), limits = c(0,34), expand = c(0,0)) +
labs(title = "Symptomatic cases with reported onset date (n=199) ",
x = "Date of symptom onset",
y = "Number of cases") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_symp_nishiura_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
### Non-symptomatics ###
ggplot() +
geom_bar(data = data_non_symp, stat="identity", aes(x = day_no, y = non_symp), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_non_symp$test_date, breaks = data_non_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,70,5), limits = c(0,70), expand = c(0,0)) +
labs(title = "Non-symptomatic cases by test date (n=320)",
x = "Date of test",
y = "Number of cases") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_non_symp_mizumoto_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
### Testing (excluding on symptomatics) ###
ggplot() +
geom_bar(data = data_non_symp, stat="identity", aes(x = day_no, y = tests_non_symp_cum), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_non_symp$test_date, breaks = data_non_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,3000,250), limits = c(0,3000), expand = c(0,0)) +
labs(title = "Cumulative tests (excluding symptomatics) by test date",
x = "Date of test",
y = "Cumulative number of tests") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_tests_mizumoto_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
data_symp = read.csv(file = "data/raw_data_symp_nishiura_20.csv", header = TRUE, sep = ",")    # raw data
setwd("~/Documents/lshtm/github repos/covid19_asymptomatic_trans")
#setwd("/Users/jonemery/Google Drive/LSHTM - Research Fellow/03 R/Working directory")
library("ggplot2")
### Data preparation ###
### Symptomatics
# Number of symptomatic cases by onset date for passengers (cabin contacts), passengers (other) and crew
# extracted from figure 1 in https://www.mdpi.com/2077-0383/9/3/657
data_symp = read.csv(file = "data/raw_data_symp_nishiura_20.csv", header = TRUE, sep = ",")    # raw data
data_symp$all = rowSums(data_symp[,c(-1)])                                                # aggregation into total cases
data_symp$day_no = seq(1,length(data_symp$onset_date),1)                                  # add in day numbers (day 1 = Jan 20th)
data_cases_symp = data_symp[,c("onset_date","day_no","all")]     # Incident symptomatic cases by onset date for model fitting
write.csv(data_cases_symp, file = "data/data_cases_symp.csv", row.names = FALSE)
### Non-symptomatics
# Total number of tests, positive tests, symptomatic cases and non-symptomatic cases by date of PCR test
# extracted from Table 1 in https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2020.25.10.2000180
data_non_symp = read.csv(file = "data/raw_data_non_symp_mizumoto_20.csv", header = TRUE, sep = ",") # raw data
data_non_symp$tests_non_symp = data_non_symp$tests - data_non_symp$symp                        # number of tests performed on everyone except symptomatics
data_non_symp$day_no = seq(1,length(data_symp$onset_date),1)                                   # add in day numbers (day 1 = Jan 20th)
data_non_symp$tests_non_symp_cum = cumsum(data_non_symp$tests_non_symp)                        # cumulatiec number of tests performed on everyone except symptomatics
data_tests = data_non_symp[,c("test_date","day_no","tests_non_symp_cum")]    # Cumulative PCR tests as input for PCR screening function in the model
write.csv(data_tests, file = "data_tests.csv", row.names = FALSE)
data_cases_non_symp = data_non_symp[,c("test_date","day_no","non_symp")]     # Incident non-symptomatic cases by date of PCR test for model fitting
write.csv(data_cases_non_symp, file = "data/data_cases_non_symp.csv", row.names = FALSE)
### Plots ###
height = 16
aspect_ratio = 1.4
title_size = 18
title_face = "bold"
axis_title_size = 16
x_axis_text_size = 10
y_axis_text_size = 13
axis_line_thickness = 1.1
### Symptomatics ###
ggplot() +
geom_bar(data = data_symp, stat="identity", aes(x = day_no, y = all), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_symp$onset_date, breaks = data_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,34,2), limits = c(0,34), expand = c(0,0)) +
labs(title = "Symptomatic cases with reported onset date (n=199) ",
x = "Date of symptom onset",
y = "Number of cases") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_symp_nishiura_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
### Non-symptomatics ###
ggplot() +
geom_bar(data = data_non_symp, stat="identity", aes(x = day_no, y = non_symp), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_non_symp$test_date, breaks = data_non_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,70,5), limits = c(0,70), expand = c(0,0)) +
labs(title = "Non-symptomatic cases by test date (n=320)",
x = "Date of test",
y = "Number of cases") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_non_symp_mizumoto_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
### Testing (excluding on symptomatics) ###
ggplot() +
geom_bar(data = data_non_symp, stat="identity", aes(x = day_no, y = tests_non_symp_cum), colour = "white", fill = "#24478f") +
scale_x_continuous(labels = data_non_symp$test_date, breaks = data_non_symp$day_no, expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,3000,250), limits = c(0,3000), expand = c(0,0)) +
labs(title = "Cumulative tests (excluding symptomatics) by test date",
x = "Date of test",
y = "Cumulative number of tests") +
theme(text = element_text(family = "sans"),
plot.title = element_text(size = title_size, vjust = 8, hjust = 0.5, margin = margin(t = 30), face = title_face),
axis.title.x.bottom = element_text(vjust = -2, margin = margin(b = 18), size = axis_title_size),
axis.title.y.left = element_text(vjust = 4, margin = margin(l = 28), size = axis_title_size),
axis.text.x.bottom = element_text(vjust = 0.5, size = x_axis_text_size, angle = 90, margin = margin(t = 6)),
axis.text.y.left = element_text(size = y_axis_text_size),
axis.line.x.bottom = element_line(size = axis_line_thickness),
axis.line.y.left = element_line(size = axis_line_thickness),
axis.ticks = element_line(size = axis_line_thickness),
panel.background = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank())
ggsave("data_tests_mizumoto_20.png", width = aspect_ratio*height, height = height, units = "cm", dpi = 300)
#setwd("/Users/jonemery/Google Drive/LSHTM - Research Fellow/03 R/Working directory")
library("deSolve")
library("numDeriv")
library("FME")
### times ###
# Allocate all daily values (e.g. symptomatic cases per day) to the end of the day
# E.g. 2 cases on 20th Jan (the first day) are allocated to 23:59:59 on 20th Jan (time = 1 day)
initial_time = 0 # 00:00:00 on 20th Jan
final_time = 32  # 23:59:59 on 20th Feb
time_step = 0.1  # days
### parameters ###
params = c(beta_bar = 2.2,    # 1/days       - initial transmission rate (approx)
b_1 = 0.9,         # number       - final transmission rate = (1-b_1)*initial transmission rate
b_2 = 1.38,        # number       - gradient of transition between intial and final transmission rate
tau = 16,          # days         - timescale of transition between intial and final transmission rate
nu = 1/4,          # 1/days       - 1/latent period
gamma_a = 1/7,     # 1/days       - 1/infectious period of asymptomatic
gamma_p = 1/2.4,   # 1/days       - 1/infectious period of presymptomatic
gamma_s = 1/3.2,   # 1/days       - 1/infectious period of symptomatic
t_mu = 16,         # days         - time after which passive case finding starts (16 = 00:00:00 on 5th Feb)
mu = 1,            # 1/days       - 1/delay between symptom onset and removal through passive case finding
theta_p = 0.99,    # proportion   - relative infectiousness of presymptomatic relative to symptomatic
theta_a = 0.5,     # proportion   - relative infectiousness of asymptomatic relative to symptomatic
chi = 0.3,         # proportion   - proportion exposed that become asymptomatic
phi = 199/301,     # proportion   - proportion of presymptomatic that become symptomatic with a known onset date
N = 3711)          # number       - initial number on the ship (assumed the number as at 5th Feb applies on 20th Jan)
params_var = params[c("beta_bar","b_1","b_2","tau","t_mu", "theta_a", "chi", "theta_p")]  # parameters to vary in fitting
params_fix = params[c("nu","gamma_a","gamma_p","gamma_s","mu","phi","N")]                 # parameters to hold fixed in fitting
lower = log(c("beta_bar" = 0.0001, "b_1" = 0.0001, "b_2" = 0.0001, "tau" = 0.0001,  "t_mu" = 0.0001,  "theta_a" = 0.0001, "chi" = 0.0001, "theta_p" = 0.0001))  # lower bounds on parameters in fitting
upper = log(c("beta_bar" = 1000 ,  "b_1" = 1 ,     "b_2" = 1000,   "tau" = 32,      "t_mu" = 32,      "theta_a" = 1,      "chi" = 1,      "theta_p" = 1))       # upper bounds on parameters in fitting
### PCR screening function ###
# Screening funtion f(t) = dN_tests/dt * 1/(S+E+I_p+I_a+C). Below calculates dN_tests/dt
data_tests = read.table(file = "data/data_tests.csv", header = TRUE, sep = ",") # Input data on cumulative PCR tests on everyone except symptomatics and removed
N_tests = splinefun(data_tests$day_no, data_tests$tests_non_symp_cum, method = "hyman") # Convert PCR test data to a continuous function
# Note that t<0 and t>32 haven't been accounted for
dN_tests = function(time){              # Time derivative of cumulative tests
dN_tests = grad(N_tests, x = time)
return(dN_tests)
}
### model ###
traj = function(parameters){
times = seq(initial_time,final_time,time_step)
#variables and initial conditions
state = with(as.list(c(parameters)),{
c(S = N-1,      # Susceptible
E = 0,        # Exposed
I_a = 0,      # Infectious (symptomatic)
I_p = 0,      # Infectious (presymptomatic)
I_sk = 1,     # Infectious (symptomatic - known date of onset)
I_su = 0,     # Infectious (symptomatic - unknown date of onset)
C = 0,        # Self-cured on the ship
R_s = 0,      # Symptomatics removed from the ship through passive case finding
R_n = 0,      # Non-symptomtics (pre or asymptomatics) removed from the ship through active case finding
S_tests = 0,  # Number of tests performed on Susceptible
E_tests = 0,  # Number of tests performed on Exposed
C_tests = 0)  # Number of tests performed on Self-cured
})
#function for the sigmoid transmission rate to reflect reduced contact after quarantine
beta_t = function(parameters,time){
with(as.list(c(parameters)),{
beta_t = beta_bar*(1-b_1/(1+exp(-b_2*(time-tau))))
return(beta_t)
})
}
#function for passive case finding of symptomatics after quarantine starts
mu_t = function(parameters,time){
with(as.list(c(parameters)),{
if(time<t_mu){
mu_t = 0
}else{
mu_t = mu
}
return(mu_t)
})
}
# model equations
equations = function(time, state, parameters) {
with(as.list(c(state,parameters)),{
dS = -beta_t(parameters,time)*((theta_a*I_a + theta_p*I_p + I_sk + I_su)/N)*S
dE =  beta_t(parameters,time)*((theta_a*I_a + theta_p*I_p + I_sk + I_su)/N)*S - nu*E
dI_a =  chi*nu*E - gamma_a*I_a - dN_tests(time)/(S+E+I_p+I_a+C)*I_a
dI_p =  (1-chi)*nu*E - gamma_p*I_p - dN_tests(time)/(S+E+I_p+I_a+C)*I_p
dI_sk =  phi*gamma_p*I_p - gamma_s*I_sk - mu_t(parameters,time)*I_sk
dI_su =  (1-phi)*gamma_p*I_p - gamma_s*I_su - mu_t(parameters,time)*I_su
dC =  gamma_a*I_a + gamma_s*I_sk + gamma_s*I_su
dR_s =  mu_t(parameters,time)*I_sk + mu_t(parameters,time)*I_su
dR_n =  dN_tests(time)/(S+E+I_p+I_a+C)*I_a + dN_tests(time)/(S+E+I_p+I_a+C)*I_p
dS_tests = dN_tests(time)/(S+E+I_p+I_a+C)*S
dE_tests = dN_tests(time)/(S+E+I_p+I_a+C)*E
dC_tests = dN_tests(time)/(S+E+I_p+I_a+C)*C
return(list(c(dS,dE,dI_a,dI_p,dI_sk,dI_su,dC,dR_s,dR_n,dS_tests,dE_tests,dC_tests),
I_s= I_sk+I_su,                                # total symptomatics
R= R_s+R_n,                                    # total removed from the ship
N_ship= S+E+I_a+I_p+I_sk+I_su+C,               # total remaining on the ship
N_tests = S_tests+E_tests+C_tests+R_n,         # total tested through PCR screening
test=S+E+I_a+I_p+I_sk+I_su+C+R_s+R_n,          # test to make sure total people remains constant
dI_sk =  phi*gamma_p*I_p,                      # daily symptomatic cases with an onset date - for fitting
dR_n = dN_tests(time)/(S+E+I_p+I_a+C)*I_a + dN_tests(time)/(S+E+I_p+I_a+C)*I_p)) # daily non-symptomatic cases removed from the ship following testing - for fitting
})
}
output = ode(func = equations, y = state, parms = parameters, times = times)
return(output)
}
traj_fit = function(parameters){
output = traj(parameters)
print(parameters)
return(as.data.frame(output))
}
### fitting data ###
data_cases_symp = read.csv(file = "data/data_cases_symp.csv", header = TRUE, sep = ",")          # bring in symptomatic cases data for fitting
names(data_cases_symp)[c(2,3)] = c("time","dI_sk")                                          # convert names to match model outputs
data_cases_symp$av = mean(data_cases_symp$dI_sk)                                            # add a mean column for fitting
data_cases_non_symp = read.csv(file = "data/data_cases_non_symp.csv", header = TRUE, sep = ",")  # bring in non-symptomatic cases data for fitting
names(data_cases_non_symp)[c(2,3)] = c("time","dR_n")                                       # convert names to match model outputs
data_cases_non_symp$av = mean(data_cases_non_symp$dR_n)                                     # add a mean column for fitting
### least squares fitting ###
# define a cost function that compares model outputs with data
cost_function = function(parameters){
output = traj_fit(parameters)
cost_symp = modCost(model = output, obs = data_cases_symp[,c("time","dI_sk","av")], err = "av")
cost_non_symp = modCost(model = output, obs = data_cases_non_symp[,c("time","dR_n","av")], cost = cost_symp, err = "av")
}
# set up cost function to input into optimisation
log_cost_function = function(log_parameters){
cost_function(c(exp(log_parameters), params_fix))
}
# optimisation
params_ls = modFit(f = log_cost_function, p = log(params_var), method = "Pseudo", lower = lower, upper = upper) # log-least squares parameters
params_ls$par = exp(coef(params_ls)) # unlogged least squares parameters
params_ls = c(params_ls$par, params_fix) # stitch fitted parameters back togeter with fixed parameters
# plot results
plot(traj(params_ls))
plot(traj(params_ls)[,"time"],traj(params_ls)[,"dR_n"],type="l")
points(data_cases_non_symp$time,data_cases_non_symp$dR_n)
plot(traj(params_ls)[,"time"],traj(params_ls)[,"dI_sk"],type="l")
points(data_cases_symp$time,data_cases_symp$dI_sk)
plot(traj(params_ls))
params = c(beta_bar = 2.2,    # 1/days       - initial transmission rate (approx)
b_1 = 0.9,         # number       - final transmission rate = (1-b_1)*initial transmission rate
b_2 = 1.38,        # number       - gradient of transition between intial and final transmission rate
tau = 16,          # days         - timescale of transition between intial and final transmission rate
nu = 1/4,          # 1/days       - 1/latent period
gamma_a = 1/7,     # 1/days       - 1/infectious period of asymptomatic
gamma_p = 1/2.4,   # 1/days       - 1/infectious period of presymptomatic
gamma_s = 1/3.2,   # 1/days       - 1/infectious period of symptomatic
t_mu = 16,         # days         - time after which passive case finding starts (16 = 00:00:00 on 5th Feb)
mu = 1,            # 1/days       - 1/delay between symptom onset and removal through passive case finding
theta_p = 0.99,    # proportion   - relative infectiousness of presymptomatic relative to symptomatic
theta_a = 0.5,     # proportion   - relative infectiousness of asymptomatic relative to symptomatic
chi = 0.3,         # proportion   - proportion exposed that become asymptomatic
phi = 199/301,     # proportion   - proportion of presymptomatic that become symptomatic with a known onset date
N = 3711)
traj(parameters)
initial_time = 0 # 00:00:00 on 20th Jan
final_time = 32  # 23:59:59 on 20th Feb
time_step = 0.1  # da
traj(params)
tmpOutput <- traj(params)
tmpOutput %>% View
tmpOutput <- traj(params)
tmpOutput %>% View
tmpOutput$S
tmpOutput[1]
tmpOutput[,1]
plot(tmpOutput[,2])
plot(tmpOutput[,3])
plot(tmpOutput[,4])
tmpOutput %>% View
plot(tmpOutput[,5])
plot(tmpOutput[,6])
plot(tmpOutput[,7])
plot(tmpOutput[,8])
plot(tmpOutput[,9])
plot(tmpOutput[,2:9])
points(tmpOutput[,2:9])
points(tmpOutput[,10])
points(tmpOutput[,11])
points(tmpOutput[,2])
points(tmpOutput[,3])
points(tmpOutput[,4])
points(tmpOutput[,5])
points(tmpOutput[,6])
points(tmpOutput[,7])
points(tmpOutput[,8])
points(tmpOutput[,9])
plot(tmpOutput[,2])
plot(tmpOutput[,2])
plot(tmpOutput[,3])
plot(tmpOutput[,4])
plot(tmpOutput[,5])
plot(tmpOutput[,6])
plot(tmpOutput[,7])
plot(tmpOutput[,8])
plot(tmpOutput[,9])
plot(tmpOutput[,10])
plot(tmpOutput[,11])
plot(tmpOutput[,12])
plot(tmpOutput[,13])
plot(tmpOutput[,14])
plot(tmpOutput[,15])
plot(tmpOutput[,16])
plot(tmpOutput[,17])
plot(tmpOutput[,18])
plot(tmpOutput[,19])
plot(tmpOutput[,20])
plot(tmpOutput[,21])
plot(tmpOutput[,6])
plot(tmpOutput[,18])
plot(tmpOutput[,19])
plot(tmpOutput[,6])
plot(tmpOutput[,19])
plot(tmpOutput[,20])
data_symp
data_cases_non_symp$time,data_cases_non_symp$dR_n
